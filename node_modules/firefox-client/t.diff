diff --git a/README.md b/README.md
index 4539d2c..e774c95 100644
--- a/README.md
+++ b/README.md
@@ -101,3 +101,16 @@ Methods: `document()`, `documentElement()`, `querySelector()`, `querySelectorAll
 Properties: `nodeValue`, `nodeName`, `namespaceURI`
 
 Methods: `parentNode()`, `parents()`, `siblings()`, `nextSibling()`, `previousSibling()`, `querySelector()`, `querySelectorAll()`, `innerHTML()`, `outerHTML()`, `setAttribute()`, `remove()`, `release()`
+
+#### [Tab.StyleSheets](https://github.com/harthur/firefox-client/wiki/StyleSheets)
+Methods: `getStyleSheets()`, `addStyleSheet()`
+
+#### [StyleSheet](https://github.com/harthur/firefox-client/wiki/StyleSheet)
+Properties: `href`, `disabled`, `ruleCount`
+
+Methods: `update()`
+
+Events: `"disabled-changed"`, `"ruleCount-changed"`
+
+
+
diff --git a/lib/stylesheets.js b/lib/stylesheets.js
index 8b7bdda..9890741 100644
--- a/lib/stylesheets.js
+++ b/lib/stylesheets.js
@@ -8,7 +8,7 @@ function StyleSheets(client, actor) {
 }
 
 StyleSheets.prototype = extend(ClientMethods, {
-  listStyleSheets: function(cb) {
+  getStyleSheets: function(cb) {
     this.request('getStyleSheets', function(resp) {
       return resp.styleSheets.map(function(sheet) {
         return new StyleSheet(this.client, sheet);
@@ -26,6 +26,8 @@ StyleSheets.prototype = extend(ClientMethods, {
 function StyleSheet(client, sheet) {
   this.initialize(client, sheet.actor);
   this.sheet = sheet;
+
+  this.on("propertyChange", this.onPropertyChange.bind(this));
 }
 
 StyleSheet.prototype = extend(ClientMethods, {
@@ -41,6 +43,20 @@ StyleSheet.prototype = extend(ClientMethods, {
     return this.sheet.ruleCount;
   },
 
+  onPropertyChange: function(event) {
+    this.sheet[event.property] = event.value;
+    this.emit(event.property + "-changed", event.value);
+  },
+
+  toggleDisabled: function(cb) {
+    this.request('toggleDisabled', function(err, resp) {
+      if (err) return cb(err);
+
+      this.sheet.disabled = resp.disabled;
+      cb(null, resp.disabled);
+    }.bind(this));
+  },
+
   update: function(text, cb) {
     this.request('update', { text: text }, cb);
   }
diff --git a/test/test-stylesheets.js b/test/test-stylesheets.js
index 3f92119..8c7b3d0 100644
--- a/test/test-stylesheets.js
+++ b/test/test-stylesheets.js
@@ -8,7 +8,7 @@ var styleSheet;
 before(function(done) {
   utils.loadTab('stylesheets.html', function(aTab) {
     StyleSheets = aTab.StyleSheets;
-    StyleSheets.listStyleSheets(function(err, sheets) {
+    StyleSheets.getStyleSheets(function(err, sheets) {
       assert.strictEqual(err, null);
       styleSheet = sheets[1];
       done();
@@ -16,11 +16,11 @@ before(function(done) {
   });
 });
 
-// Stylesheets - listStyleSheets(), addStyleSheet()
+// Stylesheets - getStyleSheets(), addStyleSheet()
 
-describe('listStyleSheets()', function() {
+describe('getStyleSheets()', function() {
   it('should list all the stylesheets', function(done) {
-    StyleSheets.listStyleSheets(function(err, sheets) {
+    StyleSheets.getStyleSheets(function(err, sheets) {
       assert.strictEqual(err, null);
 
       var hrefs = sheets.map(function(sheet) {
@@ -67,3 +67,26 @@ describe('StyleSheet.update()', function() {
     })
   })
 })
+
+describe('StyleSheet.toggleDisabled()', function() {
+  it('should toggle disabled attribute', function(done) {
+    assert.deepEqual(styleSheet.disabled, false);
+
+    styleSheet.toggleDisabled(function(err, resp) {
+      assert.strictEqual(err, null);
+      assert.deepEqual(styleSheet.disabled, true);
+      done();
+    })
+  })
+
+  it('should fire disabled-updated event', function(done) {
+    styleSheet.toggleDisabled(function(err, resp) {
+      assert.strictEqual(err, null);
+      assert.deepEqual(styleSheet.disabled, false);
+    })
+    styleSheet.on("disabled-changed", function(disabled) {
+      assert.strictEqual(disabled, false);
+      done();
+    })
+  })
+})
diff --git a/test/utils.js b/test/utils.js
index 2612419..45dc191 100644
--- a/test/utils.js
+++ b/test/utils.js
@@ -18,7 +18,7 @@ function getFirstTab(callback) {
   if (tab) {
     return callback(tab);
   }
-  var client = new FirefoxClient();
+  var client = new FirefoxClient({log: true});
 
   client.connect(function() {
     client.listTabs(function(err, tabs) {
